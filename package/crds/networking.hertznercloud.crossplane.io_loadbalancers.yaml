---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: loadbalancers.networking.hertznercloud.crossplane.io
spec:
  group: networking.hertznercloud.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - hertznercloud
    kind: LoadBalancer
    listKind: LoadBalancerList
    plural: loadbalancers
    singular: loadbalancer
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: A LoadBalancer is an example API type.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A LoadBalancerSpec defines the desired state of a LoadBalancer.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: LoadBalancerParameters are the configurable fields of
                  a LoadBalancer.
                properties:
                  algorithm:
                    description: Algorithm of the Load Balancer (round_robin or least_connections)
                    properties:
                      type:
                        description: Type of the algorithm (round_robin or least connection)
                        type: string
                    required:
                    - type
                    type: object
                  labels:
                    additionalProperties:
                      type: string
                    description: User-defined labels (key-value pairs)
                    type: object
                  load_balancer_type:
                    description: ID or name of the Load Balancer type this Load Balancer
                      should be created with
                    type: string
                  location:
                    description: ID or name of Location to create Load Balancer in
                    type: string
                  name:
                    type: string
                  network:
                    description: ID of the network the Load Balancer should be attached
                      to on creation
                    format: int64
                    type: integer
                  network_zone:
                    description: Name of network zone
                    type: string
                  public_interface:
                    description: Enable or disable the public interface of the Load
                      Balancer
                    type: boolean
                  services:
                    description: Array of services
                    items:
                      description: 'Refers to: hcloud.schema.LoadBalancerService'
                      properties:
                        destination_port:
                          description: Port the Load Balancer will balance to
                          type: integer
                        health_check:
                          description: Service health check
                          properties:
                            http:
                              description: Additional configuration for protocol http
                              properties:
                                domain:
                                  description: Host header to send in the HTTP request.
                                    May not contain spaces, percent or backslash symbols.
                                    Can be null, in that case no host header is sent.
                                  type: string
                                path:
                                  description: HTTP path to use for health checks.
                                    May not contain literal spaces, use percent-encoding
                                    instead.
                                  type: string
                                response:
                                  description: String that must be contained in HTTP
                                    response in order to pass the health check
                                  type: string
                                status_codes:
                                  description: List of returned HTTP status codes
                                    in order to pass the health check. Supports the
                                    wildcards ? for exactly one character and * for
                                    multiple ones. The default is to pass the health
                                    check for any status code between 2?? and 3??.
                                  items:
                                    type: string
                                  type: array
                                tls:
                                  description: Use HTTPS for health check
                                  type: boolean
                              required:
                              - domain
                              - path
                              type: object
                            interval:
                              description: Time interval in seconds health checks
                                are performed
                              type: integer
                            port:
                              description: Port the health check will be performed
                                on
                              type: integer
                            protocol:
                              description: Type of the health check (tcp or http)
                              type: string
                            retries:
                              description: Unsuccessful retries needed until a target
                                is considered unhealthy; an unhealthy target needs
                                the same number of successful retries to become healthy
                                again
                              type: integer
                            timeout:
                              description: Time in seconds after an attempt is considered
                                a timeout
                              type: integer
                          required:
                          - interval
                          - port
                          - protocol
                          - retries
                          - timeout
                          type: object
                        http:
                          description: Configuration option for protocols http and
                            https
                          properties:
                            certificates:
                              description: IDs of the Certificates to use for TLS/SSL
                                termination by the Load Balancer; empty for TLS/SSL
                                passthrough or if protocol is "http"
                              items:
                                type: integer
                              type: array
                            cookie_lifetime:
                              description: Lifetime of the cookie used for sticky
                                sessions
                              type: integer
                            cookie_name:
                              description: Name of the cookie used for sticky sessions
                              type: string
                            redirect_http:
                              description: Redirect HTTP requests to HTTPS. Only available
                                if protocol is "https". Default false
                              type: boolean
                            sticky_sessions:
                              description: Use sticky sessions. Only available if
                                protocol is "http" or "https". Default false
                              type: boolean
                          type: object
                        listen_port:
                          description: Port the Load Balancer listens on
                          type: integer
                        protocol:
                          description: Protocol of the Load Balancer (http, https,
                            tcp)
                          type: string
                        proxy_protocol:
                          description: Is Proxyprotocol enabled or not
                          type: boolean
                      required:
                      - destination_port
                      - health_check
                      - http
                      - listen_port
                      - protocol
                      - proxy_protocol
                      type: object
                    type: array
                  targets:
                    description: Array of targets
                    items:
                      properties:
                        health_status:
                          description: List of health statuses of the services on
                            this target
                          items:
                            properties:
                              listen_port:
                                description: Port to check
                                type: integer
                              status:
                                description: 'Possible enum values:'
                                type: string
                            type: object
                          type: array
                        ip:
                          description: IP targets where the traffic should be routed
                            through. It is only possible to use the (Public or vSwitch)
                            IPs of Hetzner Online Root Servers belonging to the project
                            owner. IPs belonging to other users are blocked. Additionally
                            IPs belonging to services provided by Hetzner Cloud (Servers,
                            Load Balancers, ...) are blocked as well.
                          properties:
                            ip:
                              description: IP of a server that belongs to the same
                                customer (public IPv4/IPv6) or private IP in a Subnetwork
                                type vswitch.
                              type: string
                          required:
                          - ip
                          type: object
                        label_selector:
                          description: Label selector and a list of selected targets
                          properties:
                            selector:
                              description: Label selector
                              type: string
                          required:
                          - selector
                          type: object
                        server:
                          description: Server where the traffic should be routed through
                          properties:
                            id:
                              description: ID of the Server
                              type: integer
                          required:
                          - id
                          type: object
                        targets:
                          description: List of selected targets
                          x-kubernetes-preserve-unknown-fields: true
                        type:
                          description: Type of the resource (server, label_selector
                            or ip)
                          type: string
                        use_private_ip:
                          description: Use the private network IP instead of the public
                            IP. Default value is false.
                          type: boolean
                      required:
                      - type
                      type: object
                    type: array
                required:
                - algorithm
                - load_balancer_type
                - name
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A LoadBalancerStatus represents the observed state of a LoadBalancer.
            properties:
              atProvider:
                description: LoadBalancerObservation are the observable fields of
                  a LoadBalancer.
                properties:
                  observableField:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
